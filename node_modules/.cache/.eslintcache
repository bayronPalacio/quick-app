[{"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\index.js":"1","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\reportWebVitals.js":"2","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\App.js":"3","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\Login.js":"4","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\Registration.js":"5","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\Home.js":"6","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\AddProduct.js":"7","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\components\\NavBar.js":"8","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\components\\CarouselView.js":"9","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\components\\Footer.js":"10"},{"size":585,"mtime":1613434372937,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1613434372942,"results":"13","hashOfConfig":"12"},{"size":668,"mtime":1613442076839,"results":"14","hashOfConfig":"12"},{"size":3046,"mtime":1613434372939,"results":"15","hashOfConfig":"12"},{"size":6604,"mtime":1613441239635,"results":"16","hashOfConfig":"12"},{"size":457,"mtime":1613449446625,"results":"17","hashOfConfig":"12"},{"size":170,"mtime":1613441946547,"results":"18","hashOfConfig":"12"},{"size":742,"mtime":1613445031626,"results":"19","hashOfConfig":"12"},{"size":1431,"mtime":1613449516368,"results":"20","hashOfConfig":"12"},{"size":1733,"mtime":1613452257282,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"yibj19",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\index.js",[],["47","48"],"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\reportWebVitals.js",[],"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\App.js",["49"],"import './App.css';\r\nimport Login from './pages/Login';\r\nimport Registration from './pages/Registration';\r\nimport Home from './pages/Home';\r\nimport AddProduct from './pages/AddProduct';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route, Switch,\r\n} from 'react-router-dom';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n        <div>\r\n          <Route path=\"\" component={Home} exact/>\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/registration\" component={Registration}/>\r\n          <Route path=\"/addProduct\" component={AddProduct}/>\r\n        </div>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\Login.js",["50","51"],"import Modal from \"react-bootstrap/Modal\";\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n\r\n  const ValidateUser = async () => {\r\n    const result = await fetch(`/login`, {\r\n      method: 'post',\r\n      body: JSON.stringify({ email, password: email, password }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    const response = await result.json();\r\n    if (response['responseServer'] === \"yes\") {\r\n      history.push(\"/Registration\");\r\n      console.log('Successfully Login');\r\n    }\r\n    else {\r\n      console.log(\"user no exist\");\r\n    }\r\n    setEmail('');\r\n    setPassword('');\r\n  }\r\n  return (\r\n    <>\r\n      <Modal show={true} dialogClassName={\"primaryModal\"}>\r\n        <Modal.Body>\r\n\r\n          <main className=\"mainBack\">\r\n            <div className=\"mx-auto\" >\r\n\r\n              <h1 className=\"h1-title\">Please sign in</h1>\r\n              <div className=\"dropdown-menu-right\">\r\n                <form className=\"px-4 py-3\">\r\n                  <div className=\"form-group\">\r\n                    {/* <!-- <label for=\"exampleDropdownFormEmail1\">Email address</label> --> */}\r\n                    <input type=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} className=\"form-control\" id=\"exampleDropdownFormEmail1\" placeholder=\"email@service.com\" />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    {/* <!-- <label for=\"exampleDropdownFormPassword1\">Password</label> --> */}\r\n                    <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} className=\"form-control\" id=\"exampleDropdownFormPassword1\" placeholder=\"Password\" />\r\n                  </div>\r\n                  <div className=\"form-group h1-title\">\r\n                    <div className=\"form-check\">\r\n                      <input type=\"checkbox\" className=\"form-check-input\" id=\"dropdownCheck\" />\r\n                      <label className=\"form-check-label\" for=\"dropdownCheck\">\r\n                        Remember me\r\n              </label>\r\n                    </div>\r\n                  </div>\r\n                  <button type=\"submit\" onClick={() => ValidateUser()} className=\"btn button-color btn-block\">Sign in</button>\r\n                  <p className=\"text-center font-italic font-weight-light\">By clicking Sign In, you agree to our Terms.</p>\r\n                  <div className=\"dropdown-divider\">\r\n                    <a className=\"dropdown-item text-center font-italic btn-success\" href=\"./signUp\">No Acount? Sign up</a>\r\n                    <a className=\"dropdown-item text-center font-italic btn-success\" href=\"#\">Forgot password?</a>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n}\r\n\r\nexport default Login;","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\Registration.js",["52","53","54","55","56","57","58","59"],"import Modal from \"react-bootstrap/Modal\";\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Registration = () => {\r\n\r\n    // const { name, last, company, address, city, province, email, password } = req.body;\r\n\r\n    const [name, setName] = useState('');\r\n    const [last, setLast] = useState('');\r\n    const [company, setCompany] = useState('');\r\n    const [address, setAddress] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [province, setProvince] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const history = useHistory();\r\n\r\n    const AddNewUser = async () => {\r\n        const result = await fetch('/registration', {\r\n            method: 'post',\r\n            body: JSON.stringify({ name, last, company, address, city, province, email, password: name, last, company, address, city, province, email, password }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const response = await result.json();\r\n        console.log(response);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Modal show={true} dialogClassName={\"primaryModal\"}>\r\n                <Modal.Body>\r\n                    <h1 className=\"h1-title\">Create your account</h1>\r\n                    {/* <form action=\"/registration\" method=\"post\"> */}\r\n                    <form>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom01\">First name</label>\r\n                                <input type=\"text\" value={name} onChange={(event) => setName(event.target.value)} className=\"form-control\" id=\"validationCustom01\" placeholder=\"Mark\" required />\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom02\">Last name</label>\r\n                                <input type=\"text\" value={last} onChange={(event) => setLast(event.target.value)} className=\"form-control\" id=\"validationCustom02\" placeholder=\"Otto\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom03\">Company Name</label>\r\n                                <input type=\"text\" value={company} onChange={(event) => setCompany(event.target.value)} className=\"form-control\" id=\"validationCustom03\" placeholder=\"Quick Inventory\" required />\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom05\">Address</label>\r\n                                <input type=\"text\" value={address} onChange={(event) => setAddress(event.target.value)} className=\"form-control\" id=\"validationCustom05\" placeholder=\"123 Street Ave\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom03\">City</label>\r\n                                <input type=\"text\" value={city} onChange={(event) => setCity(event.target.value)} className=\"form-control\" id=\"validationCustom03\" placeholder=\"City\" required />\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom05\">Province/State</label>\r\n                                <input type=\"text\" value={province} onChange={(event) => setProvince(event.target.value)} className=\"form-control\" id=\"validationCustom05\" placeholder=\"Province/State\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom03\">Email</label>\r\n                                <input type=\"text\" value={email} onChange={(event) => setEmail(event.target.value)} className=\"form-control\" id=\"validationCustom03\" placeholder=\"email@service.com\" required />\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid email.\r\n                </div>\r\n                            </div>\r\n                            <div className=\"col-md-6 mb-3\">\r\n                                <label for=\"validationCustom05\">Password</label>\r\n                                <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} className=\"form-control\" id=\"validationCustom05\" placeholder=\"Password\" required />\r\n                                <small id=\"passwordHelpBlock\" className=\"form-text text-muted\">\r\n                                    Your password must be 8-20 characters long, contain letters and numbers.\r\n                  </small>\r\n                                <div className=\"invalid-feedback\">\r\n                                    Please provide a valid password\r\n                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-check\">\r\n                                    <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required />\r\n                                    <label className=\"form-check-label\" for=\"invalidCheck\">\r\n                                        Agree to terms and conditions\r\n                        </label>\r\n                                    <div className=\"invalid-feedback\">\r\n                                        You must agree before submitting.\r\n                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <button type=\"submit\" onClick={() => AddNewUser()} className=\"btn button-color\">Create an Account</button>\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Registration;","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\Home.js",[],"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\pages\\AddProduct.js",[],"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\components\\NavBar.js",["60"],"import React from \"react\";\r\nimport Logo from \"../images/logo3.jpeg\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-sm navbar-custom\">\r\n            <div className=\"container-fluid\">\r\n                <span className=\"navbar-brand mb-0 h1\">\r\n                    <img src={Logo} alt=\"\" width=\"35\" height=\"35\" className=\"d-inline-block align-top\" />\r\n                    Quick Inventory\r\n                </span>\r\n                <form className=\"d-flex\">\r\n                    <a className=\"btn button-color btn-block\" data-toggle=\"modal\" data-target=\"#modalSignIn\">Sign In</a>\r\n                </form>\r\n            </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\components\\CarouselView.js",[],"C:\\Users\\alien\\Documents\\DouglasCollege\\SemesterVI\\ResearchProject\\QuickInventory\\quick-app\\src\\components\\Footer.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":8,"column":10,"nodeType":"67","messageId":"68","endLine":8,"endColumn":16},{"ruleId":"69","severity":1,"message":"70","line":13,"column":54,"nodeType":"71","messageId":"72","endLine":13,"endColumn":62},{"ruleId":"73","severity":1,"message":"74","line":60,"column":21,"nodeType":"75","endLine":60,"endColumn":95},{"ruleId":"65","severity":1,"message":"76","line":17,"column":11,"nodeType":"67","messageId":"68","endLine":17,"endColumn":18},{"ruleId":"69","severity":1,"message":"77","line":22,"column":105,"nodeType":"71","messageId":"72","endLine":22,"endColumn":109},{"ruleId":"69","severity":1,"message":"78","line":22,"column":111,"nodeType":"71","messageId":"72","endLine":22,"endColumn":118},{"ruleId":"69","severity":1,"message":"79","line":22,"column":120,"nodeType":"71","messageId":"72","endLine":22,"endColumn":127},{"ruleId":"69","severity":1,"message":"80","line":22,"column":129,"nodeType":"71","messageId":"72","endLine":22,"endColumn":133},{"ruleId":"69","severity":1,"message":"81","line":22,"column":135,"nodeType":"71","messageId":"72","endLine":22,"endColumn":143},{"ruleId":"69","severity":1,"message":"82","line":22,"column":145,"nodeType":"71","messageId":"72","endLine":22,"endColumn":150},{"ruleId":"69","severity":1,"message":"70","line":22,"column":152,"nodeType":"71","messageId":"72","endLine":22,"endColumn":160},{"ruleId":"73","severity":1,"message":"83","line":14,"column":21,"nodeType":"75","endLine":14,"endColumn":110},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'password'.","ObjectExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'history' is assigned a value but never used.","Duplicate key 'last'.","Duplicate key 'company'.","Duplicate key 'address'.","Duplicate key 'city'.","Duplicate key 'province'.","Duplicate key 'email'.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]